#xlConverter配置及说明文件
#项目地址：https://github.com/gamefang/xlConverter
#version='1.4.6'
#__author__='gamefang'

#类型前缀
#无前缀均为string
#<b>: boolean
#<ts>: tuple of string(split with ,)
#<i>: integer
#<f>: float


#通用配置
[DEFAULT]

#########################################
#最常用的配置：通常情况只需要调整这些即可
#<str>Excel文件的存放目录，会自动搜寻目录下所有Excel文件。路径分隔符必须用“/”！
xl_dir = ./input
#<str>输出文件的目录。路径分隔符必须用“/”！
output_dir = ./output
#########################################


#<bool>是否查看说明。
<b>read_me_mode = false


#Excel文件加载[xlloader]
#<str>Excel文件的存放目录，会自动搜寻目录下所有Excel文件。路径分隔符必须用“/”！
#xl_dir = ./input
#<bool>是否采用递归形式搜索Excel文件目录。
<b>recursive_xl_files = false
#<tuple of str>搜寻的Excel文件後缀。另外默认以'~$','__'开头的excel文件不会被搜寻。
<ts>file_exts = xlsx,xls,xlsm
#<char>Excel文件中，加此前缀的sheet会被导出，可支持多个。前缀只允许一个字符。
sheet_name_prefix = #
#<str>Excel一个sheet中配置的边界符号，只有边界内的配置内容才会被导出。
bound_tag = #
#<tuple of str>Excel配置中单行、单列注释的前缀，被注释则不会被导出。
<ts>note_signs = #,//,--
#<bool>是否允许Excel配置中使用内容注释（可能导致字段不统一）。
<b>allow_inner_note = true
#<tuple of str>Excel配置中字段名前缀字符串，用以区分数据类型，需严格按照以下顺序：
#        0-python的int，对应json中的数字num；
#        1-python的float，对应json中的数字num；
#        2-python的string，对应json中的字符串string；
#        3-python的list，对应json中的全字符串数组（自动补全双引号）;
#        4-python的list，对应json中的普通数组array（全数字或数串混合自补双引号）；
#        5-python的dict，对应json中的对象object（自补双引号）；
#        6-python的boolean，对应json中的布尔值bool；
#        暂不包括json中的null类型。
<ts>var_type_pre = i_,f_,s_,t_,a_,o_,b_
#<bool>是否不使用配置中留空的数据
<b>remove_blank_params = false

#数据转化[dataconverter]
#<bool>是否在输出的key中保留字段名前缀。
<b>keep_var_type = false
#<int>数据转化的方式
#		0-大对象内的 主键 - 键值对
#		1-数组内的键值对对象
<i>convert_style = 0
#<bool>方式1时，数组是否从null补位开始
<b>begin_with_null = true


#<int>输出格式
#		0-json
#		1-md
#		2-pickle
#		3-lua
#		4-csv
<i>output_type = 3
#<str>输出后缀名，使用默认则留空
output_ext = txt
#<bool>输出至一个文件，还是分别输出文件
<b>output_in_one = false
#<str>输出至一个文件的文件名
output_in_one_fn = configs.json
#<int>json文件缩进，None为无缩进
<i>json_indent = 2
#<str>json文件分隔符，最紧缩形式：(',', ':') 默认 None
json_separators = None
#<int>pickle protocol设置。2向下兼容py2，4需要py3.4+。默认2
<i>pickle_protocol = 2
#<str>lua文件的格式模板，name表示配置名称，luastr表示luatable的本体即{}中内容
lua_template = local tb_{name} = {luastr}
#<str>csv文件分隔符，默认,
csv_separator = ,